INPUT

OUTPUT

STATE
rs1_copy : BV(5) ;
rs2_copy : BV(5) ;
rd_copy : BV(5) ;
funct7_copy : BV(7) ;
funct3_copy : BV(3) ;
imm_copy : BV(32) ;
immj_copy : BV(32) ;
shimm_copy : BV(32) ;
shimm2_copy : BV(32) ;
pc_copy : BV(32) ;
pc_offset : BV(32) ;
pc_offset_j: BV(32);

INIT
rs1_copy = rs1 ;
rs2_copy = rs2;
rd_copy = rd ;
imm_copy = imm ;
immj_copy = immj ;
shimm_copy = shimm ;
shimm2_copy = shimm2 ;
funct7_copy = funct7 ;
funct3_copy = funct3 ;
pc_copy = pc ;
pc_offset = 0_32 ;
pc_offset_j = 0_32 ;
val1 = pipe.aregfile.regfile.mem[rs1] ;
val2 = pipe.aregfile.regfile.mem[rs2] ;

INVAR

TRANS
next(rs1_copy) = rs1_copy ;
next(rs2_copy) = rs2_copy;
next(rd_copy) = rd_copy ;
next(imm_copy) = imm_copy ;
next(immj_copy) = immj_copy ;
next(shimm_copy) = shimm_copy ;
next(shimm2_copy) = shimm2_copy ;
next(funct7_copy) = funct7_copy ;
next(funct3_copy) = funct3_copy ;
next(pc_copy) = pc_copy ;
next(pc_offset) = pc_offset ;
next(pc_offset_j) = pc_offset_j ;
next(val1) = val2 ;
next(val2) = val2 ;
